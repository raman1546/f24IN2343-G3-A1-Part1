// Illustration of Classes and Objects
class Animal {
    // Attributes (Encapsulation)
    private String name;
    private int age;

    // Constructor
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Methods (Abstraction)
    public void makeSound() {
        System.out.println("Generic animal sound");
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}

// Inheritance and Polymorphism
class Dog extends Animal {
    public Dog(String name, int age) {
        super(name, age); 
    }

    // Method Overriding (Polymorphism)
    @Override
    public void makeSound() {
        System.out.println("Woof!");
    }
}

class Cat extends Animal {
    public Cat(String name, int age) {
        super(name, age); 
    }

    // Method Overriding (Polymorphism)
    @Override
    public void makeSound() {
        System.out.println("Meow!");
    }
}

public class AnimalDemo {
    public static void main(String[] args) {
        Animal animal = new Animal("Generic Animal", 5);
        Dog dog = new Dog("Buddy", 3);
        Cat cat = new Cat("Whiskers", 2);

        animal.makeSound(); // Output: Generic animal sound
        dog.makeSound();     // Output: Woof!
        cat.makeSound();     // Output: Meow!

        System.out.println(dog.getName() + " is " + dog.getAge() + " years old."); 
        // Output: Buddy is 3 years old.
    }
}
